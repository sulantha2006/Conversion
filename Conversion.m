%%
%%%% ANALYSIS FOR CSF
tic
fprintf('\nCSF Vars Analysis - Starting\n')
NumberOfVars = 8;
InitialPopFunction = @PopFunction;
gaOptions = gaoptimset('CreationFcn', {InitialPopFunction},...
                       'PopulationSize',150,...
                     'Generations',30,...
                     'PopulationType', 'bitstring',...
                     'SelectionFcn',{@selectionroulette},...
                     'MutationFcn',{@mutationuniform, 0.1},...
                     'CrossoverFcn', {@crossoversinglepoint},...
                     'EliteCount',2,...
                     'StallGenLimit',100,...
                     'PlotFcns',{@gaplotbestf, @gaplotbestindiv, @gaplotexpectation, @gaplotgenealogy},...  
                     'UseParallel', true,...
                     'Vectorized', 'off',...
                     'Display', 'iter'); 
                 
FitnessFunction = @MCI_Conversion_FitnessRusBoost_CSF;
[chromosome_csf,fval_csf,exitflag_csf,output_csf,population_csf,scores_csf]=ga(FitnessFunction, NumberOfVars, gaOptions);
bestFeatures = find(chromosome_csf==1);
fprintf('CSF Vars Analysis - Done\n')
fprintf('CSF Vars Analysis - Best Features : ')
chromosome_csf
toc

%%
%%%% ANALYSIS FOR AV45
tic
fprintf('\nAV45 Vars Analysis - Starting\n')
NumberOfVars = 8;
InitialPopFunction = @PopFunction;
gaOptions = gaoptimset('CreationFcn', {InitialPopFunction},...
                       'PopulationSize',150,...
                     'Generations',30,...
                     'PopulationType', 'bitstring',...
                     'SelectionFcn',{@selectionroulette},...
                     'MutationFcn',{@mutationuniform, 0.1},...
                     'CrossoverFcn', {@crossoversinglepoint},...
                     'EliteCount',2,...
                     'StallGenLimit',100,...
                     'PlotFcns',{@gaplotbestf, @gaplotbestindiv, @gaplotexpectation, @gaplotgenealogy},...  
                     'UseParallel', true,...
                     'Vectorized', 'off',...
                     'Display', 'iter'); 
                 
FitnessFunction = @MCI_Conversion_FitnessRusBoost_AV45;
[chromosome_av45,fval_av45,exitflag_av45,output_av45,population_av45,scores_av45]=ga(FitnessFunction, NumberOfVars, gaOptions);
bestFeatures = find(chromosome_av45==1);
fprintf('AV45 Vars Analysis - Done\n')
fprintf('AV45 Vars Analysis - Best Features : ')
chromosome_av45
toc

%%
%%%% ANALYSIS FOR FDG
tic
fprintf('\nFDG Vars Analysis - Starting\n')
NumberOfVars = 9;
InitialPopFunction = @PopFunction;
gaOptions = gaoptimset('CreationFcn', {InitialPopFunction},...
                       'PopulationSize',150,...
                     'Generations',30,...
                     'PopulationType', 'bitstring',...
                     'SelectionFcn',{@selectionroulette},...
                     'MutationFcn',{@mutationuniform, 0.1},...
                     'CrossoverFcn', {@crossoversinglepoint},...
                     'EliteCount',2,...
                     'StallGenLimit',100,...
                     'PlotFcns',{@gaplotbestf, @gaplotbestindiv, @gaplotexpectation, @gaplotgenealogy},...  
                     'UseParallel', true,...
                     'Vectorized', 'off',...
                     'Display', 'iter'); 
                 
FitnessFunction = @MCI_Conversion_FitnessRusBoost_FDG;
[chromosome_fdg,fval_fdg,exitflag_fdg,output_fdg,population_fdg,scores_fdg]=ga(FitnessFunction, NumberOfVars, gaOptions);
bestFeatures = find(chromosome_fdg==1);
fprintf('FDG Vars Analysis - Done\n')
fprintf('FDG Vars Analysis - Best Features : ')
chromosome_fdg
toc

%%
%%%% ANALYSIS FOR BIOMARKERS
tic
fprintf('\nBIOMARKERS Vars Analysis - Starting\n')
NumberOfVars = 14;
InitialPopFunction = @PopFunction;
gaOptions = gaoptimset('CreationFcn', {InitialPopFunction},...
                       'PopulationSize',150,...
                     'Generations',100,...
                     'PopulationType', 'bitstring',...
                     'SelectionFcn',{@selectionroulette},...
                     'MutationFcn',{@mutationuniform, 0.1},...
                     'CrossoverFcn', {@crossoversinglepoint},...
                     'EliteCount',2,...
                     'StallGenLimit',100,...
                     'PlotFcns',{@gaplotbestf, @gaplotbestindiv, @gaplotexpectation, @gaplotgenealogy},...  
                     'UseParallel', true,...
                     'Vectorized', 'off',...
                     'Display', 'iter'); 
                 
FitnessFunction = @MCI_Conversion_FitnessRusBoost_BIOMARKER;
[chromosome_biomarker,fval_biomarker,exitflag_biomarker,output_biomarker,population_biomarker,scores_biomarker]=ga(FitnessFunction, NumberOfVars, gaOptions);
bestFeatures = find(chromosome_biomarker==1);
fprintf('BIOMARKERS Vars Analysis - Done\n')
fprintf('BIOMARKERS Vars Analysis - Best Features : ')
chromosome_biomarker
toc

%%
%%%% ANALYSIS FOR CSFAV45
tic
fprintf('\nCSFAV45 Vars Analysis - Starting\n')
NumberOfVars = 13;
InitialPopFunction = @PopFunction;
gaOptions = gaoptimset('CreationFcn', {InitialPopFunction},...
                       'PopulationSize',150,...
                     'Generations',100,...
                     'PopulationType', 'bitstring',...
                     'SelectionFcn',{@selectionroulette},...
                     'MutationFcn',{@mutationuniform, 0.1},...
                     'CrossoverFcn', {@crossoversinglepoint},...
                     'EliteCount',2,...
                     'StallGenLimit',100,...
                     'PlotFcns',{@gaplotbestf, @gaplotbestindiv, @gaplotexpectation, @gaplotgenealogy},...  
                     'UseParallel', true,...
                     'Vectorized', 'off',...
                     'Display', 'iter'); 
                 
FitnessFunction = @MCI_Conversion_FitnessRusBoost_CSFAV45;
[chromosome_csfav45,fval_csfav45,exitflag_csfav45,output_csfav45,population_csfav45,scores_csfav45]=ga(FitnessFunction, NumberOfVars, gaOptions);
bestFeatures = find(chromosome_csfav45==1);
fprintf('CSFAV45 Vars Analysis - Done\n')
fprintf('CSFAV45 Vars Analysis - Best Features : ')
chromosome_csfav45
toc

%%
%%%% ANALYSIS FOR CSFFDG
tic
fprintf('\nCSFFDG Vars Analysis - Starting\n')
NumberOfVars = 14;
InitialPopFunction = @PopFunction;
gaOptions = gaoptimset('CreationFcn', {InitialPopFunction},...
                       'PopulationSize',150,...
                     'Generations',100,...
                     'PopulationType', 'bitstring',...
                     'SelectionFcn',{@selectionroulette},...
                     'MutationFcn',{@mutationuniform, 0.1},...
                     'CrossoverFcn', {@crossoversinglepoint},...
                     'EliteCount',2,...
                     'StallGenLimit',100,...
                     'PlotFcns',{@gaplotbestf, @gaplotbestindiv, @gaplotexpectation, @gaplotgenealogy},...  
                     'UseParallel', true,...
                     'Vectorized', 'off',...
                     'Display', 'iter'); 
                 
FitnessFunction = @MCI_Conversion_FitnessRusBoost_CSFFDG;
[chromosome_csffdg,fval_csffdg,exitflag_csffdg,output_csffdg,population_csffdg,scores_csffdg]=ga(FitnessFunction, NumberOfVars, gaOptions);
bestFeatures = find(chromosome_csffdg==1);
fprintf('CSFFDG Vars Analysis - Done\n')
fprintf('CSFFDG Vars Analysis - Best Features : ')
chromosome_csffdg
toc

%%
%%%% ANALYSIS FOR ALL CSF + AV45 + FDG
tic
fprintf('\nFull Vars Analysis - Starting\n')
NumberOfVars = 19;
InitialPopFunction = @PopFunction;
gaOptions = gaoptimset('CreationFcn', {InitialPopFunction},...
                       'PopulationSize',150,...
                     'Generations',100,...
                     'PopulationType', 'bitstring',...
                     'SelectionFcn',{@selectionroulette},...
                     'MutationFcn',{@mutationuniform, 0.1},...
                     'CrossoverFcn', {@crossoversinglepoint},...
                     'EliteCount',2,...
                     'StallGenLimit',100,...
                     'PlotFcns',{@gaplotbestf, @gaplotbestindiv, @gaplotexpectation, @gaplotgenealogy},...  
                     'UseParallel', true,...
                     'Vectorized', 'off',...
                     'Display', 'iter'); 
                 
FitnessFunction = @MCI_Conversion_FitnessRusBoost;
[chromosome_all,fval_all,exitflag_all,output_all,population_all,scores_all]=ga(FitnessFunction, NumberOfVars, gaOptions);
bestFeatures = find(chromosome_all==1);
fprintf('Full Vars Analysis - Done\n')
fprintf('Full Vars Analysis - Best Features : ')
chromosome_all
toc